import { IThingsboardHttpClient } from '../thingsboard-drivers/thingsboard-http-client';
import { IThingsboardMqttClient } from '../thingsboard-drivers/thingsboard-mqtt-client';
export interface NodeInterface {
    on(type: 'input', callback: (msg: any, done?: any) => void): any;
    on(type: 'close', callback: (done?: any) => void): any;
    send(msg: any): any;
    status(status: any): any;
    log(msg: string): any;
    warn(msg: string): any;
    error(msg: string): any;
}
export interface IConnectionManagerInterface {
    credentials: any;
    context: any;
    httpClient: IThingsboardHttpClient;
    on(type: 'input', callback: (msg: any, done?: any) => void): any;
    on(type: 'close', callback: (done?: any) => void): any;
    send(msg: any): any;
    status(status: any): any;
    log(msg: string): any;
    warn(msg: string): any;
    error(msg: string): any;
    register(thingsboardNode: any): void;
    deregister(thingsboardNode: any, done?: any): void;
    getHttpClient(): IThingsboardHttpClient;
    getMqttClient(): IThingsboardMqttClient;
    clearRegisteredObjects(): void;
    registerObject(uri: string): void;
    getRegisteredObjects(): string[];
    objectIsRegistered(uri: string): boolean;
}
