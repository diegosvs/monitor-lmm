module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof2 = __webpack_require__(1);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _assign = __webpack_require__(2);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _getFeed = function () {
	  var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(feed, dataStore, options) {
	    var feedOptions;
	    return _regenerator2.default.wrap(function _callee5$(_context5) {
	      while (1) {
	        switch (_context5.prev = _context5.next) {
	          case 0:
	            feedOptions = cookGetFeedOptions(options);
	            _context5.next = 3;
	            return dataStore.getFeedPosts(feed, feedOptions.offset, feedOptions.limit);
	
	          case 3:
	            return _context5.abrupt('return', _context5.sent);
	
	          case 4:
	          case 'end':
	            return _context5.stop();
	        }
	      }
	    }, _callee5, this);
	  }));
	
	  return function _getFeed(_x5, _x6, _x7) {
	    return _ref5.apply(this, arguments);
	  };
	}();
	
	exports.default = Rivus;
	
	var _config = __webpack_require__(5);
	
	var _config2 = _interopRequireDefault(_config);
	
	var _createDataStore = __webpack_require__(11);
	
	var _createDataStore2 = _interopRequireDefault(_createDataStore);
	
	var _createFeed = __webpack_require__(25);
	
	var _createFeed2 = _interopRequireDefault(_createFeed);
	
	var _synchronize2 = __webpack_require__(40);
	
	var _synchronize3 = _interopRequireDefault(_synchronize2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function Rivus(baseConfig) {
	  var _this = this;
	
	  var configOverrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  var config = new _config2.default(baseConfig, configOverrides);
	  var feedPromise = (0, _createFeed2.default)(config);
	  var dataStorePromise = (0, _createDataStore2.default)(config);
	
	  var filter = {
	    add: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(filter) {
	        var feed;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return feedPromise;
	
	              case 2:
	                feed = _context.sent;
	
	                feed.addFilter(filter);
	
	              case 4:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this);
	      }));
	
	      return function add(_x2) {
	        return _ref.apply(this, arguments);
	      };
	    }(),
	    remove: function () {
	      var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(filter) {
	        var feed;
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                _context2.next = 2;
	                return feedPromise;
	
	              case 2:
	                feed = _context2.sent;
	
	                feed.removeFilter(filter);
	
	              case 4:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, _this);
	      }));
	
	      return function remove(_x3) {
	        return _ref2.apply(this, arguments);
	      };
	    }()
	  };
	
	  var rivus = {
	    get: function get(maybeLimit, maybeCallback) {
	      var limit = maybeLimit || 10;
	      var callback = function callback() {};
	
	      if (typeof maybeCallback === 'function') {
	        callback = maybeCallback;
	      } else if (maybeLimit === 'function') {
	        limit = 10;
	        callback = maybeLimit;
	      }
	
	      return _this.getFeed({ limit: limit }).then(function (results) {
	        callback(null, results);
	      }, function (error) {
	        callback(error);
	      });
	    },
	    getFeed: function () {
	      var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(options) {
	        var feed, dataStore;
	        return _regenerator2.default.wrap(function _callee3$(_context3) {
	          while (1) {
	            switch (_context3.prev = _context3.next) {
	              case 0:
	                _context3.next = 2;
	                return feedPromise;
	
	              case 2:
	                feed = _context3.sent;
	                _context3.next = 5;
	                return dataStorePromise;
	
	              case 5:
	                dataStore = _context3.sent;
	                _context3.next = 8;
	                return _getFeed(feed, dataStore, options);
	
	              case 8:
	                return _context3.abrupt('return', _context3.sent);
	
	              case 9:
	              case 'end':
	                return _context3.stop();
	            }
	          }
	        }, _callee3, _this);
	      }));
	
	      return function getFeed(_x4) {
	        return _ref3.apply(this, arguments);
	      };
	    }(),
	    synchronize: function () {
	      var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
	        var feed, dataStore;
	        return _regenerator2.default.wrap(function _callee4$(_context4) {
	          while (1) {
	            switch (_context4.prev = _context4.next) {
	              case 0:
	                _context4.next = 2;
	                return feedPromise;
	
	              case 2:
	                feed = _context4.sent;
	                _context4.next = 5;
	                return dataStorePromise;
	
	              case 5:
	                dataStore = _context4.sent;
	                _context4.next = 8;
	                return (0, _synchronize3.default)(feed, dataStore);
	
	              case 8:
	                return _context4.abrupt('return', _context4.sent);
	
	              case 9:
	              case 'end':
	                return _context4.stop();
	            }
	          }
	        }, _callee4, _this);
	      }));
	
	      return function synchronize() {
	        return _ref4.apply(this, arguments);
	      };
	    }()
	  };
	
	  Object.defineProperty(rivus, 'filter', {
	    get: function get() {
	      return filter;
	    }
	  });
	
	  return rivus;
	}
	
	function cookGetFeedOptions(inputOptions) {
	  var options = {
	    offset: 0,
	    limit: 10
	  };
	
	  if (typeof inputOptions === 'number') {
	    (0, _assign2.default)(options, { limit: inputOptions });
	  } else if ((typeof inputOptions === 'undefined' ? 'undefined' : (0, _typeof3.default)(inputOptions)) === 'object' && !Array.isArray(inputOptions)) {
	    (0, _assign2.default)(options, inputOptions);
	  }
	
	  return options;
	}
	module.exports = exports['default'];

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/typeof");

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/object/assign");

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/regenerator");

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/asyncToGenerator");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ResolvedConfig = undefined;
	
	var _getIterator2 = __webpack_require__(6);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	var _assign = __webpack_require__(2);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _typeof2 = __webpack_require__(1);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _classCallCheck2 = __webpack_require__(8);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(9);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _fs = __webpack_require__(10);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Config = function () {
	  function Config(source) {
	    var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    (0, _classCallCheck3.default)(this, Config);
	
	    if (typeof source === 'string') {
	      this.promise = loadConfigFromFile(source).then(function (config) {
	        return resolveConfig(config, overrides);
	      });
	    } else if ((typeof source === 'undefined' ? 'undefined' : (0, _typeof3.default)(source)) === 'object') {
	      this.promise = _promise2.default.resolve(resolveConfig(source, overrides));
	    } else {
	      this.promise = _promise2.default.reject(new Error('invalid configuration parameter: ' + (typeof source === 'undefined' ? 'undefined' : (0, _typeof3.default)(source))));
	    }
	  }
	
	  (0, _createClass3.default)(Config, [{
	    key: 'load',
	    value: function load() {
	      return this.promise;
	    }
	  }]);
	  return Config;
	}();
	
	exports.default = Config;
	
	var ResolvedConfig = exports.ResolvedConfig = function () {
	  function ResolvedConfig() {
	    var attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var section = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	    (0, _classCallCheck3.default)(this, ResolvedConfig);
	
	    this.attributes = attributes;
	    this.sectionName = section;
	  }
	
	  (0, _createClass3.default)(ResolvedConfig, [{
	    key: 'optional',
	    value: function optional(key, defaultValue) {
	      var value = this.attributes[key];
	
	      if (value !== undefined) {
	        value = interpolateConfigValue(value, true);
	      }
	
	      return value === undefined ? defaultValue : value;
	    }
	  }, {
	    key: 'mandatory',
	    value: function mandatory(key) {
	      if (this.attributes[key] !== undefined) {
	        return interpolateConfigValue(this.attributes[key]);
	      }
	      throw new Error('missing mandatory option [' + key + '] in config ' + this.sectionName);
	    }
	  }, {
	    key: 'section',
	    value: function section(key) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { optional: false };
	
	      var newSectionAttributes = this.attributes[key];
	      var newSectionName = this.sectionName ? this.sectionName + '.' + key : key;
	
	      if (!newSectionAttributes) {
	        return options.optional ? null : new ResolvedConfig({}, newSectionName);
	      }
	
	      switch (typeof newSectionAttributes === 'undefined' ? 'undefined' : (0, _typeof3.default)(newSectionAttributes)) {
	        case 'object':
	          return new ResolvedConfig(newSectionAttributes, newSectionName);
	        case 'string':
	          return interpolateSection(newSectionAttributes, newSectionName, options.optional);
	        default:
	          throw new Error('config: option [' + key + '] should be an object');
	      }
	    }
	  }]);
	  return ResolvedConfig;
	}();
	
	function loadConfigFromFile(fileName) {
	  return new _promise2.default(function (resolve, reject) {
	    _fs2.default.readFile(fileName, 'utf8', function (err, data) {
	      if (err) {
	        reject(new Error('error reading config file: ' + err.message));
	      } else {
	        resolve(JSON.parse(data));
	      }
	    });
	  });
	}
	
	function resolveConfig(attributes, overrides) {
	  return new ResolvedConfig((0, _assign2.default)({}, attributes, overrides));
	}
	
	function interpolateConfigValue(value) {
	  var optional = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (typeof value === 'string') {
	    var match = value.match(/^\${(.+)}$/);
	    if (match) {
	      return interpolateConfigValue(interpolateExpression(match[1], optional), optional);
	    }
	  }
	
	  return value;
	}
	
	function interpolateExpression(expression) {
	  var optional = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  var parts = expression.split('.');
	  var firstPart = true;
	  var value = null;
	
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = (0, _getIterator3.default)(parts), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var part = _step.value;
	
	      if (firstPart) {
	        firstPart = false;
	        value = first(part, optional);
	        if (value === undefined && optional) {
	          return undefined;
	        }
	        if (value === 'true' || value === 'false') {
	          value = JSON.parse(value);
	        }
	      } else {
	        value = next(value, part);
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  return value;
	
	  function first(part, optional) {
	    if (!process.env[part]) {
	      if (optional) {
	        return undefined;
	      }
	
	      throw new Error('config: cannot interpolate expression [' + expression + ']: ' + ('environment variable ' + part + ' is not set'));
	    }
	
	    var value = process.env[part];
	
	    if (parts.length > 1) {
	      try {
	        value = JSON.parse(value);
	      } catch (e) {
	        throw new Error('config: cannot interpolate expression [' + expression + ']: ' + ('environment variable ' + part + ' is not a valid JSON'));
	      }
	    }
	
	    return value;
	  }
	
	  function next(value, part) {
	    if (Array.isArray(value)) {
	      if (value.length !== 1) {
	        throw new Error('config: cannot interpolate expression [' + expression + ']: ' + ('item [' + part + '] is an array of length ' + value.length));
	      }
	      return next(value[0], part);
	    } else if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object') {
	      return value[part];
	    } else {
	      throw new Error('config: cannot interpolate expression [' + expression + ']: ' + ('key path missing at ' + part));
	    }
	  }
	}
	
	function interpolateSection(expression, sectionName, optional) {
	  var attributes = interpolateConfigValue(expression, optional);
	
	  if (attributes) {
	    try {
	      attributes = JSON.parse(attributes);
	      if ((typeof attributes === 'undefined' ? 'undefined' : (0, _typeof3.default)(attributes)) !== 'object') {
	        attributes = null;
	      }
	    } catch (e) {
	      attributes = null;
	    }
	
	    if (!attributes) {
	      throw new Error('config: ' + sectionName + ': cannot interpolate expression [' + expression + ']: ' + 'object expected');
	    }
	  }
	
	  if (attributes) {
	    return new ResolvedConfig(attributes, sectionName);
	  } else if (!optional) {
	    return new ResolvedConfig({}, sectionName);
	  } else {
	    return null;
	  }
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/get-iterator");

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/promise");

/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/classCallCheck");

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/createClass");

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _createRedisDataStore = __webpack_require__(12);
	
	var _createRedisDataStore2 = _interopRequireDefault(_createRedisDataStore);
	
	var _createMemoryDataStore = __webpack_require__(23);
	
	var _createMemoryDataStore2 = _interopRequireDefault(_createMemoryDataStore);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(config) {
	    var dataStoreConfig;
	    return _regenerator2.default.wrap(function _callee$(_context) {
	      while (1) {
	        switch (_context.prev = _context.next) {
	          case 0:
	            _context.next = 2;
	            return config.load();
	
	          case 2:
	            _context.t0 = { optional: true };
	            dataStoreConfig = _context.sent.section('dataStore', _context.t0);
	
	            if (!(dataStoreConfig && dataStoreConfig.optional('type') === 'redis')) {
	              _context.next = 8;
	              break;
	            }
	
	            return _context.abrupt('return', (0, _createRedisDataStore2.default)(dataStoreConfig.section('settings')));
	
	          case 8:
	            return _context.abrupt('return', (0, _createMemoryDataStore2.default)());
	
	          case 9:
	          case 'end':
	            return _context.stop();
	        }
	      }
	    }, _callee, this);
	  }));
	
	  function createDataStore(_x) {
	    return _ref.apply(this, arguments);
	  }
	
	  return createDataStore;
	}();

	module.exports = exports['default'];

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createRedisDataStore;
	
	var _RedisDataStore = __webpack_require__(13);
	
	var _RedisDataStore2 = _interopRequireDefault(_RedisDataStore);
	
	var _createRedisClient = __webpack_require__(21);
	
	var _createRedisClient2 = _interopRequireDefault(_createRedisClient);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRedisDataStore(config) {
	  return new _RedisDataStore2.default((0, _createRedisClient2.default)('riv-us', config));
	}
	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _stringify = __webpack_require__(14);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _toConsumableArray2 = __webpack_require__(15);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(8);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(9);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var loadPostsByIds = function () {
	  var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(client, postIds) {
	    return _regenerator2.default.wrap(function _callee7$(_context7) {
	      while (1) {
	        switch (_context7.prev = _context7.next) {
	          case 0:
	            if (postIds.length) {
	              _context7.next = 2;
	              break;
	            }
	
	            return _context7.abrupt('return', []);
	
	          case 2:
	            _context7.next = 4;
	            return redisQuery.apply(undefined, [client, 'mget'].concat((0, _toConsumableArray3.default)(postIds.map(Keys.post))));
	
	          case 4:
	            _context7.t0 = function (data) {
	              return (0, _momentize.momentize)(JSON.parse(data));
	            };
	
	            return _context7.abrupt('return', _context7.sent.map(_context7.t0));
	
	          case 6:
	          case 'end':
	            return _context7.stop();
	        }
	      }
	    }, _callee7, this);
	  }));
	
	  return function loadPostsByIds(_x11, _x12) {
	    return _ref7.apply(this, arguments);
	  };
	}();
	
	var redisQuery = function () {
	  var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8(client, command) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    return _regenerator2.default.wrap(function _callee8$(_context8) {
	      while (1) {
	        switch (_context8.prev = _context8.next) {
	          case 0:
	            _log2.default.debug.apply(_log2.default, ['Redis: ' + command].concat((0, _toConsumableArray3.default)(args.map(function (arg) {
	              return '"' + arg + '"';
	            }))));
	
	            _context8.next = 3;
	            return new _promise2.default(function (resolve, reject) {
	              if (!client[command]) {
	                reject(new Error('Redis: undefined command ' + command));
	                return;
	              }
	
	              client[command].apply(client, [].concat(args, [function (err, response) {
	                if (err) {
	                  _log2.default.warn.apply(_log2.default, ['Redis: error ' + command].concat((0, _toConsumableArray3.default)(args.map(function (arg) {
	                    return '"' + arg + '"';
	                  })), [':', err]));
	                  reject(new Error('Redis: ' + err.message));
	                } else {
	                  resolve(response);
	                }
	              }]));
	            });
	
	          case 3:
	            return _context8.abrupt('return', _context8.sent);
	
	          case 4:
	          case 'end':
	            return _context8.stop();
	        }
	      }
	    }, _callee8, this);
	  }));
	
	  return function redisQuery(_x13, _x14) {
	    return _ref8.apply(this, arguments);
	  };
	}();
	
	var _moment = __webpack_require__(16);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _log = __webpack_require__(17);
	
	var _log2 = _interopRequireDefault(_log);
	
	var _momentize = __webpack_require__(19);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Keys = {
	  post: function post(id) {
	    return 'rivus:posts:' + id;
	  },
	  providerLastPostDate: function providerLastPostDate(p) {
	    return 'rivus:anchor:provider:' + p.feedId;
	  },
	  providerPostIds: function providerPostIds(p) {
	    return 'rivus:provider:' + p.feedId;
	  },
	  feedLastPostDates: function feedLastPostDates(f) {
	    return 'rivus:anchor:feed:' + f.getFeedId();
	  },
	  feedPostIds: function feedPostIds(f) {
	    return 'rivus:feed:' + f.getFeedId();
	  }
	};
	
	var RedisDataStore = function () {
	  function RedisDataStore(client) {
	    (0, _classCallCheck3.default)(this, RedisDataStore);
	
	    this.client = client;
	  }
	
	  (0, _createClass3.default)(RedisDataStore, [{
	    key: 'synchronizeProvider',
	    value: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(provider, updater) {
	        var lastPostDateKey, providerLastPostDate, writeStore, newProviderLastPostDate;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                lastPostDateKey = Keys.providerLastPostDate(provider);
	                _context.next = 3;
	                return redisQuery(this.client, 'watch', lastPostDateKey);
	
	              case 3:
	                _context.t0 = dateFromRedis;
	                _context.next = 6;
	                return redisQuery(this.client, 'get', lastPostDateKey);
	
	              case 6:
	                _context.t1 = _context.sent;
	                providerLastPostDate = (0, _context.t0)(_context.t1);
	                writeStore = new RedisWriteDataStore(this.client);
	                _context.prev = 9;
	                _context.next = 12;
	                return updater(providerLastPostDate, writeStore);
	
	              case 12:
	                newProviderLastPostDate = _context.sent;
	
	                writeStore.saveLastProviderPostDate(provider, newProviderLastPostDate);
	                _context.next = 16;
	                return writeStore.commit();
	
	              case 16:
	                return _context.abrupt('return', newProviderLastPostDate);
	
	              case 19:
	                _context.prev = 19;
	                _context.t2 = _context['catch'](9);
	
	                _log2.default.warn('Redis: error while synchronizing provider `' + provider.feedId + '`:', _context.t2);
	                writeStore.discard();
	                throw _context.t2;
	
	              case 24:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this, [[9, 19]]);
	      }));
	
	      function synchronizeProvider(_x, _x2) {
	        return _ref.apply(this, arguments);
	      }
	
	      return synchronizeProvider;
	    }()
	  }, {
	    key: 'synchronizeFeed',
	    value: function () {
	      var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(feed, updater) {
	        var lastPostDatesKey, lastPostDates, writeStore, newLastPostDates;
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                lastPostDatesKey = Keys.feedLastPostDates(feed);
	                _context2.next = 3;
	                return redisQuery(this.client, 'watch', lastPostDatesKey);
	
	              case 3:
	                _context2.next = 5;
	                return redisQuery(this.client, 'get', lastPostDatesKey);
	
	              case 5:
	                lastPostDates = _context2.sent;
	
	                if (lastPostDates) {
	                  lastPostDates = JSON.parse(lastPostDates);
	                  if (Array.isArray(lastPostDates)) {
	                    lastPostDates = lastPostDates.map(dateFromRedis);
	                  } else {
	                    lastPostDates = null;
	                  }
	                }
	
	                writeStore = new RedisWriteDataStore(this.client);
	                _context2.prev = 8;
	                _context2.next = 11;
	                return updater(lastPostDates, writeStore);
	
	              case 11:
	                newLastPostDates = _context2.sent;
	
	                writeStore.saveLastFeedPostDates(feed, newLastPostDates);
	                _context2.next = 15;
	                return writeStore.commit();
	
	              case 15:
	                return _context2.abrupt('return', newLastPostDates);
	
	              case 18:
	                _context2.prev = 18;
	                _context2.t0 = _context2['catch'](8);
	
	                _log2.default.warn('Redis: error while synchronizing feed `' + feed.getFeedId() + '`:', _context2.t0);
	                writeStore.discard();
	                throw _context2.t0;
	
	              case 23:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this, [[8, 18]]);
	      }));
	
	      function synchronizeFeed(_x3, _x4) {
	        return _ref2.apply(this, arguments);
	      }
	
	      return synchronizeFeed;
	    }()
	  }, {
	    key: 'getFeedPosts',
	    value: function () {
	      var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(feed) {
	        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	        var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;
	        var postIds;
	        return _regenerator2.default.wrap(function _callee3$(_context3) {
	          while (1) {
	            switch (_context3.prev = _context3.next) {
	              case 0:
	                _context3.next = 2;
	                return redisQuery(this.client, 'zrevrangebyscore', Keys.feedPostIds(feed), Number.MAX_VALUE, 0, 'LIMIT', offset, limit);
	
	              case 2:
	                postIds = _context3.sent;
	                _context3.next = 5;
	                return loadPostsByIds(this.client, postIds);
	
	              case 5:
	                return _context3.abrupt('return', _context3.sent);
	
	              case 6:
	              case 'end':
	                return _context3.stop();
	            }
	          }
	        }, _callee3, this);
	      }));
	
	      function getFeedPosts(_x5) {
	        return _ref3.apply(this, arguments);
	      }
	
	      return getFeedPosts;
	    }()
	  }, {
	    key: 'getProviderPosts',
	    value: function () {
	      var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(provider) {
	        var endDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	        var startDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	        var postIds;
	        return _regenerator2.default.wrap(function _callee4$(_context4) {
	          while (1) {
	            switch (_context4.prev = _context4.next) {
	              case 0:
	                _context4.next = 2;
	                return redisQuery(this.client, 'zrangebyscore', Keys.providerPostIds(provider), dateToRedis(startDate, '-inf'), dateToRedis(endDate, '+inf'));
	
	              case 2:
	                postIds = _context4.sent;
	                _context4.next = 5;
	                return loadPostsByIds(this.client, postIds);
	
	              case 5:
	                return _context4.abrupt('return', _context4.sent);
	
	              case 6:
	              case 'end':
	                return _context4.stop();
	            }
	          }
	        }, _callee4, this);
	      }));
	
	      function getProviderPosts(_x8) {
	        return _ref4.apply(this, arguments);
	      }
	
	      return getProviderPosts;
	    }()
	  }, {
	    key: 'drop',
	    value: function () {
	      var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5() {
	        return _regenerator2.default.wrap(function _callee5$(_context5) {
	          while (1) {
	            switch (_context5.prev = _context5.next) {
	              case 0:
	                _context5.next = 2;
	                return redisQuery(this.client, 'flushdb');
	
	              case 2:
	                return _context5.abrupt('return', _context5.sent);
	
	              case 3:
	              case 'end':
	                return _context5.stop();
	            }
	          }
	        }, _callee5, this);
	      }));
	
	      function drop() {
	        return _ref5.apply(this, arguments);
	      }
	
	      return drop;
	    }()
	  }]);
	  return RedisDataStore;
	}();
	
	exports.default = RedisDataStore;
	
	var RedisWriteDataStore = function () {
	  function RedisWriteDataStore(client) {
	    (0, _classCallCheck3.default)(this, RedisWriteDataStore);
	
	    this.client = client.multi();
	  }
	
	  (0, _createClass3.default)(RedisWriteDataStore, [{
	    key: 'commit',
	    value: function () {
	      var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6() {
	        return _regenerator2.default.wrap(function _callee6$(_context6) {
	          while (1) {
	            switch (_context6.prev = _context6.next) {
	              case 0:
	                _context6.next = 2;
	                return redisQuery(this.client, 'exec');
	
	              case 2:
	                return _context6.abrupt('return', _context6.sent);
	
	              case 3:
	              case 'end':
	                return _context6.stop();
	            }
	          }
	        }, _callee6, this);
	      }));
	
	      function commit() {
	        return _ref6.apply(this, arguments);
	      }
	
	      return commit;
	    }()
	  }, {
	    key: 'discard',
	    value: function discard() {
	      redisOneOffQuery(this.client, 'discard');
	    }
	  }, {
	    key: 'savePosts',
	    value: function savePosts(posts) {
	      if (!posts.length) {
	        return;
	      }
	      var args = posts.reduce(function (arr, post) {
	        return [].concat((0, _toConsumableArray3.default)(arr), [Keys.post(post.id), (0, _stringify2.default)((0, _momentize.demomentize)(post))]);
	      }, []);
	      redisOneOffQuery.apply(undefined, [this.client, 'mset'].concat((0, _toConsumableArray3.default)(args)));
	    }
	  }, {
	    key: 'saveLastProviderPostDate',
	    value: function saveLastProviderPostDate(provider, date) {
	      redisOneOffQuery(this.client, 'set', Keys.providerLastPostDate(provider), dateToRedis(date));
	    }
	  }, {
	    key: 'saveLastFeedPostDates',
	    value: function saveLastFeedPostDates(feed, dates) {
	      redisOneOffQuery(this.client, 'set', Keys.feedLastPostDates(feed), dates ? (0, _stringify2.default)(dates.map(dateToRedis)) : null);
	    }
	  }, {
	    key: 'addPostsToFeed',
	    value: function addPostsToFeed(feed, posts) {
	      if (!posts.length) {
	        return;
	      }
	
	      var args = posts.reduce(function (arr, post) {
	        return [].concat((0, _toConsumableArray3.default)(arr), [dateToRedis(post.created_time), post.id]);
	      }, []);
	      redisOneOffQuery.apply(undefined, [this.client, 'zadd', Keys.feedPostIds(feed)].concat((0, _toConsumableArray3.default)(args)));
	    }
	  }, {
	    key: 'addPostsToProvider',
	    value: function addPostsToProvider(provider, posts) {
	      if (!posts.length) {
	        return;
	      }
	
	      var args = posts.reduce(function (arr, post) {
	        return [].concat((0, _toConsumableArray3.default)(arr), [dateToRedis(post.created_time), post.id]);
	      }, []);
	      redisOneOffQuery.apply(undefined, [this.client, 'zadd', Keys.providerPostIds(provider)].concat((0, _toConsumableArray3.default)(args)));
	    }
	  }]);
	  return RedisWriteDataStore;
	}();
	
	function redisOneOffQuery(client, command) {
	  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	    args[_key2 - 2] = arguments[_key2];
	  }
	
	  _log2.default.debug.apply(_log2.default, ['Redis: ' + command].concat((0, _toConsumableArray3.default)(args.map(function (arg) {
	    return '"' + arg + '"';
	  }))));
	
	  if (!client[command]) {
	    throw new Error('Redis: undefined command ' + command);
	  }
	
	  client[command].apply(client, args);
	}
	
	function dateToRedis(date, defaultValue) {
	  return date ? date.valueOf() : defaultValue;
	}
	
	function dateFromRedis(redisDate) {
	  return redisDate ? (0, _moment2.default)(Number(redisDate)) : null;
	}
	module.exports = exports['default'];

/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/json/stringify");

/***/ },
/* 15 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/toConsumableArray");

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = require("moment");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _winston = __webpack_require__(18);
	
	var _winston2 = _interopRequireDefault(_winston);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var disableLog = process.env.NODE_ENV === 'test' && !process.env.RIVUS_LOG_LEVEL;
	var logLevel = process.env.RIVUS_LOG_LEVEL || 'info';
	var prettyLog = !process.env.RIVUS_LOG_SIMPLE;
	
	var logParams = {
	  console: {
	    level: logLevel,
	    colorize: prettyLog,
	    timestamp: true,
	    prettyPrint: prettyLog,
	    humanReadableUnhandledException: true
	  }
	};
	
	var log = _winston2.default.loggers.add('rivus', logParams);
	if (disableLog) {
	  _winston2.default.loggers.get('rivus').remove(_winston2.default.transports.Console);
	}
	
	exports.default = log;
	module.exports = exports['default'];

/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = require("winston");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(20);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	exports.momentize = momentize;
	exports.demomentize = demomentize;
	
	var _moment = __webpack_require__(16);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function momentize(post) {
	  if (!_moment2.default.isMoment(post.created_time)) {
	    return (0, _extends3.default)({}, post, {
	      created_time: (0, _moment2.default)(post.created_time)
	    });
	  }
	  return post;
	}
	
	function demomentize(post) {
	  if (_moment2.default.isMoment(post.created_time)) {
	    return (0, _extends3.default)({}, post, {
	      created_time: post.created_time.valueOf()
	    });
	  }
	  return post;
	}

/***/ },
/* 20 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/extends");

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createRedisClient;
	
	var _redis = __webpack_require__(22);
	
	var _redis2 = _interopRequireDefault(_redis);
	
	var _log = __webpack_require__(17);
	
	var _log2 = _interopRequireDefault(_log);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRedisClient(storeName, config) {
	  var params = {};
	
	  if (config.optional('path')) {
	    params.path = config.optional('path');
	  } else {
	    params.host = config.optional('host', '127.0.0.1');
	    params.port = config.optional('port', 6379);
	  }
	
	  if (config.optional('password')) {
	    params.password = config.optional('password');
	  }
	
	  _log2.default.debug(storeName + ': using Redis data store: ', params);
	
	  var client = _redis2.default.createClient(params);
	
	  client.on('error', function (e) {
	    return _log2.default.error(storeName + ': redis store: ', e);
	  });
	  client.on('warning', function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _log2.default.warn.apply(_log2.default, [storeName + ': redis store: warning: '].concat(args));
	  });
	  client.on('reconnecting', function () {
	    return _log2.default.warn(storeName + ': redis store: reconnecting to server...');
	  });
	  client.on('connect', function () {
	    _log2.default.info(storeName + ': redis store: connected to server');
	  });
	
	  return client;
	}
	module.exports = exports['default'];

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = require("redis");

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createMemoryDataStore;
	
	var _fakeredis = __webpack_require__(24);
	
	var _fakeredis2 = _interopRequireDefault(_fakeredis);
	
	var _log = __webpack_require__(17);
	
	var _log2 = _interopRequireDefault(_log);
	
	var _RedisDataStore = __webpack_require__(13);
	
	var _RedisDataStore2 = _interopRequireDefault(_RedisDataStore);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMemoryDataStore() {
	  _log2.default.info('riv-us: using in-memory data store');
	
	  var fakeClient = _fakeredis2.default.createClient(888, 'riv-us', { fast: true });
	
	  return new _RedisDataStore2.default(fakeClient);
	}
	module.exports = exports['default'];

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = require("fakeredis");

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _createProvider = __webpack_require__(26);
	
	var _createProvider2 = _interopRequireDefault(_createProvider);
	
	var _config = __webpack_require__(5);
	
	var _getFeedId2 = __webpack_require__(39);
	
	var _getFeedId3 = _interopRequireDefault(_getFeedId2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(config) {
	    var loadedConfig, providers, filters;
	    return _regenerator2.default.wrap(function _callee$(_context) {
	      while (1) {
	        switch (_context.prev = _context.next) {
	          case 0:
	            _context.next = 2;
	            return config.load();
	
	          case 2:
	            loadedConfig = _context.sent;
	            providers = loadedConfig.mandatory('providers').map(function (providerAttributes) {
	              return (0, _createProvider2.default)(new _config.ResolvedConfig(providerAttributes));
	            });
	            filters = [];
	            return _context.abrupt('return', {
	              getProviders: function getProviders() {
	                return providers;
	              },
	              getFeedId: function getFeedId() {
	                return (0, _getFeedId3.default)(providers);
	              },
	              addFilter: function addFilter(filter) {
	                if (typeof filter !== 'function') {
	                  throw new Error('filter must be a function');
	                }
	
	                var i = filters.indexOf(filter);
	                if (i < 0) {
	                  filters.push(filter);
	                }
	              },
	              removeFilter: function removeFilter(filter) {
	                if (typeof filter !== 'function') {
	                  throw new Error('filter must be a function');
	                }
	
	                var i = filters.indexOf(filter);
	                if (i >= 0) {
	                  filters.splice(i, 1);
	                }
	              },
	              filterPosts: function filterPosts(posts) {
	                if (filters.length) {
	                  return posts.filter(function (p) {
	                    return filters.every(function (f) {
	                      return f(p);
	                    });
	                  });
	                }
	
	                return posts;
	              }
	            });
	
	          case 6:
	          case 'end':
	            return _context.stop();
	        }
	      }
	    }, _callee, this);
	  }));
	
	  function createFeed(_x) {
	    return _ref.apply(this, arguments);
	  }
	
	  return createFeed;
	}();

	module.exports = exports['default'];

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createProvider;
	
	var _facebook = __webpack_require__(27);
	
	var _facebook2 = _interopRequireDefault(_facebook);
	
	var _twitter = __webpack_require__(33);
	
	var _twitter2 = _interopRequireDefault(_twitter);
	
	var _rss = __webpack_require__(35);
	
	var _rss2 = _interopRequireDefault(_rss);
	
	var _medium = __webpack_require__(37);
	
	var _medium2 = _interopRequireDefault(_medium);
	
	var _instagram = __webpack_require__(38);
	
	var _instagram2 = _interopRequireDefault(_instagram);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createProvider(config) {
	  var name = config.mandatory('name');
	  switch (name) {
	    case 'facebook':
	      return (0, _facebook2.default)(config);
	    case 'medium':
	      return (0, _medium2.default)(config);
	    case 'twitter':
	      return (0, _twitter2.default)(config);
	    case 'rss':
	      return (0, _rss2.default)(config);
	    case 'instagram':
	      return (0, _instagram2.default)(config);
	    default:
	      throw new Error('unknown provider type `' + name + '`');
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _fetchPosts = function () {
	  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(feedId, userId, accessToken, nextPageToken) {
	    var endpoint, params, response;
	    return _regenerator2.default.wrap(function _callee2$(_context2) {
	      while (1) {
	        switch (_context2.prev = _context2.next) {
	          case 0:
	            endpoint = void 0;
	
	
	            if (nextPageToken) {
	              endpoint = _url2.default.parse(nextPageToken);
	            } else {
	              params = {
	                fields: 'message,link,message_tags,name,picture,full_picture,type,created_time,source,story_tags'
	              };
	
	              endpoint = _url2.default.parse('https://' + _graphApiRequest.FACEBOOK_HOST + '/' + userId + '/feed?' + _querystring2.default.encode(params));
	            }
	
	            _context2.t0 = _graphApiRequest2.default;
	            _context2.t1 = endpoint;
	            _context2.next = 6;
	            return accessToken.request();
	
	          case 6:
	            _context2.t2 = _context2.sent;
	            _context2.next = 9;
	            return (0, _context2.t0)(_context2.t1, _context2.t2);
	
	          case 9:
	            response = _context2.sent;
	            return _context2.abrupt('return', {
	              posts: response.data.map(function (p) {
	                return cookFeedItem(p, feedId);
	              }),
	              nextPageToken: (response.paging || {}).next
	            });
	
	          case 11:
	          case 'end':
	            return _context2.stop();
	        }
	      }
	    }, _callee2, this);
	  }));
	
	  return function _fetchPosts(_x3, _x4, _x5, _x6) {
	    return _ref2.apply(this, arguments);
	  };
	}();
	
	exports.default = createFacebookProvider;
	
	var _querystring = __webpack_require__(28);
	
	var _querystring2 = _interopRequireDefault(_querystring);
	
	var _moment = __webpack_require__(16);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _url = __webpack_require__(29);
	
	var _url2 = _interopRequireDefault(_url);
	
	var _accessToken = __webpack_require__(30);
	
	var _accessToken2 = _interopRequireDefault(_accessToken);
	
	var _graphApiRequest = __webpack_require__(31);
	
	var _graphApiRequest2 = _interopRequireDefault(_graphApiRequest);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createFacebookProvider(config) {
	  var _this = this;
	
	  var userId = config.mandatory('user_id');
	  var feedId = 'facebook:user:' + userId;
	  var accessToken = (0, _accessToken2.default)(config.mandatory('app_id'), config.mandatory('app_secret'));
	
	  var provider = {
	    fetchPosts: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
	        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
	        var pageToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	        var posts, nextPageToken, response;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                posts = [];
	                nextPageToken = pageToken;
	
	              case 2:
	                if (!(posts.length < limit)) {
	                  _context.next = 10;
	                  break;
	                }
	
	                _context.next = 5;
	                return _fetchPosts(feedId, userId, accessToken, nextPageToken);
	
	              case 5:
	                response = _context.sent;
	
	                posts = posts.concat(response.posts);
	                nextPageToken = posts.nextPageToken;
	                _context.next = 2;
	                break;
	
	              case 10:
	                return _context.abrupt('return', {
	                  posts: posts,
	                  nextPageToken: nextPageToken
	                });
	
	              case 11:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this);
	      }));
	
	      return function fetchPosts() {
	        return _ref.apply(this, arguments);
	      };
	    }()
	  };
	  Object.defineProperty(provider, 'feedId', { get: function get() {
	      return feedId;
	    } });
	  return provider;
	}
	
	function cookFeedItem(feedId, post) {
	  var parseImages = function parseImages() {
	    var images = {};
	
	    if (post.picture && post.picture.length) {
	      images.thumbnail = { url: post.picture };
	    }
	
	    if (post.full_picture && post.full_picture.length) {
	      images.content = { url: post.full_picture };
	    }
	
	    return images;
	  };
	
	  return {
	    id: 'fb:' + post.id,
	    title: post.name,
	    content: post.message,
	    created_time: (0, _moment2.default)(new Date(post.created_time).getTime()),
	    images: parseImages(),
	    link: post.link,
	    extra: {
	      original: post
	    },
	    source: {
	      name: 'facebook',
	      feed: feedId
	    }
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = require("querystring");

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = require("url");

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var requestNewAccessToken = function () {
	  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(appId, appSecret) {
	    var params, endpoint, responseString, items;
	    return _regenerator2.default.wrap(function _callee2$(_context2) {
	      while (1) {
	        switch (_context2.prev = _context2.next) {
	          case 0:
	            params = {
	              client_id: appId,
	              client_secret: appSecret,
	              grant_type: 'client_credentials'
	            };
	            endpoint = _url2.default.parse('https://' + _graphApiRequest.FACEBOOK_HOST + '/oauth/access_token?' + _querystring2.default.encode(params));
	            _context2.next = 4;
	            return (0, _graphApiRequest2.default)(endpoint);
	
	          case 4:
	            responseString = _context2.sent;
	            items = responseString.split('=');
	
	            if (!(items.length === 2 && items[0] === 'access_token')) {
	              _context2.next = 8;
	              break;
	            }
	
	            return _context2.abrupt('return', items[1]);
	
	          case 8:
	            throw new Error('failed getting access token from Facebook: received this instead of a token: `' + responseString + '`');
	
	          case 9:
	          case 'end':
	            return _context2.stop();
	        }
	      }
	    }, _callee2, this);
	  }));
	
	  return function requestNewAccessToken(_x, _x2) {
	    return _ref2.apply(this, arguments);
	  };
	}();
	
	exports.default = createAccessToken;
	
	var _url = __webpack_require__(29);
	
	var _url2 = _interopRequireDefault(_url);
	
	var _querystring = __webpack_require__(28);
	
	var _querystring2 = _interopRequireDefault(_querystring);
	
	var _graphApiRequest = __webpack_require__(31);
	
	var _graphApiRequest2 = _interopRequireDefault(_graphApiRequest);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createAccessToken(appId, appSecret) {
	  var _this = this;
	
	  var promise = null;
	
	  return {
	    request: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                if (!promise) {
	                  _context.next = 4;
	                  break;
	                }
	
	                _context.next = 3;
	                return promise;
	
	              case 3:
	                return _context.abrupt('return', _context.sent);
	
	              case 4:
	                promise = requestNewAccessToken(appId, appSecret);
	                return _context.abrupt('return', promise);
	
	              case 6:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this);
	      }));
	
	      return function request() {
	        return _ref.apply(this, arguments);
	      };
	    }(),
	    invalidate: function invalidate() {
	      promise = null;
	    }
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.FACEBOOK_HOST = undefined;
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _https = __webpack_require__(32);
	
	var _https2 = _interopRequireDefault(_https);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FACEBOOK_HOST = exports.FACEBOOK_HOST = 'graph.facebook.com';
	
	exports.default = function () {
	  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(endpoint, accessToken) {
	    return _regenerator2.default.wrap(function _callee$(_context) {
	      while (1) {
	        switch (_context.prev = _context.next) {
	          case 0:
	            _context.next = 2;
	            return new _promise2.default(function (resolve, reject) {
	              var headers = {};
	              if (accessToken) {
	                headers['access-token'] = accessToken;
	              }
	
	              var request = _https2.default.get({
	                hostname: endpoint.hostname,
	                path: endpoint.path,
	                headers: headers
	              }, function (message) {
	                message.on('data', function (responseData) {
	                  if (message.statusCode === 200) {
	                    try {
	                      var responseString = responseData.toString('utf8');
	                      var plainResponse = !accessToken;
	
	                      if (plainResponse) {
	                        resolve(responseString);
	                      } else {
	                        resolve(JSON.parse(responseString));
	                      }
	                    } catch (e) {
	                      reject(new Error('error processing Facebook response: ' + e.message));
	                    }
	                  } else {
	                    try {
	                      var json = JSON.parse(responseData.toString('utf8'));
	                      if (json.error) {
	                        reject(new Error('error calling Facebook: fb error ' + json.error.code + '/' + json.error.error_subcode + ': ' + (json.error.error_user_title + '; ') + ('' + json.error.error_user_message)));
	                      } else {
	                        reject(new Error('error calling Facebook: HTTP ' + message.statusCode + ' ' + message.statusMessage));
	                      }
	                    } catch (e) {
	                      reject(new Error('error processing Facebook response: HTTP ' + message.statusCode + ' ' + message.statusMessage));
	                    }
	                  }
	                });
	              });
	
	              request.on('error', function (error) {
	                reject(new Error('error calling Facebook: ' + error.message));
	              });
	            });
	
	          case 2:
	            return _context.abrupt('return', _context.sent);
	
	          case 3:
	          case 'end':
	            return _context.stop();
	        }
	      }
	    }, _callee, this);
	  }));
	
	  function graphApiRequest(_x, _x2) {
	    return _ref.apply(this, arguments);
	  }
	
	  return graphApiRequest;
	}();

/***/ },
/* 32 */
/***/ function(module, exports) {

	module.exports = require("https");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	exports.default = createTwitterProvider;
	
	var _twitter = __webpack_require__(34);
	
	var _twitter2 = _interopRequireDefault(_twitter);
	
	var _moment = __webpack_require__(16);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createTwitterProvider(config) {
	  var _this = this;
	
	  var user = config.mandatory('user');
	  var feedId = feedIdForUser(user);
	
	  var twitter = new _twitter2.default({
	    consumer_key: config.mandatory('consumer_key'),
	    consumer_secret: config.mandatory('consumer_secret'),
	    access_token_key: config.mandatory('access_token_key'),
	    access_token_secret: config.mandatory('access_token_secret')
	  });
	
	  var provider = {
	    fetchPosts: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
	        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
	        var pageToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	        var params;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                params = {
	                  screen_name: user,
	                  count: limit
	                };
	
	
	                if (pageToken) {
	                  params.max_id = pageToken;
	                }
	
	                _context.next = 4;
	                return new _promise2.default(function (resolve, reject) {
	                  twitter.get('statuses/user_timeline', params, function (err, tweets) {
	                    if (err) {
	                      reject(new Error('failed calling Twitter: ' + err.message));
	                    } else {
	                      var items = tweets.map(function (t) {
	                        return cookFeedPost(feedId, t);
	                      });
	                      resolve({
	                        posts: tweets.map(function (t) {
	                          return cookFeedPost(feedId, t);
	                        }),
	                        nextPageToken: items.length ? items.slice(-1)[0].id : null
	                      });
	                    }
	                  });
	                });
	
	              case 4:
	                return _context.abrupt('return', _context.sent);
	
	              case 5:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this);
	      }));
	
	      return function fetchPosts() {
	        return _ref.apply(this, arguments);
	      };
	    }()
	  };
	  Object.defineProperty(provider, 'feedId', {
	    get: function get() {
	      return feedId;
	    }
	  });
	  return provider;
	}
	
	function cookFeedPost(feedId, original) {
	  return {
	    id: 'twi:' + original.id,
	    title: null,
	    content: original.text,
	    created_time: (0, _moment2.default)(new Date(original.created_at).getTime()),
	    images: images(original.extended_entities),
	    extra: { original: original },
	    link: 'https://twitter.com/' + original.user.screen_name + '/status/' + original.id_str,
	    source: {
	      name: 'twitter',
	      feed: feedId
	    }
	  };
	}
	
	function images(entities) {
	  if (!entities || !Array.isArray(entities.media) || !entities.media[0]) {
	    return {};
	  }
	
	  return {
	    thumbnail: {
	      url: entities.media[0].media_url_https || entities.media[0].media_url
	    }
	  };
	}
	
	function feedIdForUser(user) {
	  return 'twitter:' + user;
	}
	module.exports = exports['default'];

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = require("twitter");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	exports.default = createRssProvider;
	
	var _feedRead = __webpack_require__(36);
	
	var _feedRead2 = _interopRequireDefault(_feedRead);
	
	var _moment = __webpack_require__(16);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _log = __webpack_require__(17);
	
	var _log2 = _interopRequireDefault(_log);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRssProvider(config) {
	  var _this = this;
	
	  var overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  var feedUrl = overrides && overrides.feedUrl || config.mandatory('feed_url');
	  var feedId = overrides && overrides.feedId || 'rss:' + feedUrl;
	  var providerName = overrides && overrides.providerName || 'rss';
	
	  var provider = {
	    fetchPosts: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _log2.default.verbose('provider `' + feedId + '`: fetch posts...');
	
	                _context.next = 3;
	                return new _promise2.default(function (resolve, reject) {
	                  (0, _feedRead2.default)(feedUrl, function (err, response) {
	                    try {
	                      if (err) {
	                        throw err;
	                      }
	
	                      var posts = response.map(function (p) {
	                        return cookFeedItem(feedId, providerName, p);
	                      });
	
	                      _log2.default.verbose('provider `' + feedId + '`: fetch complete: ' + posts.length + ' posts');
	                      resolve({
	                        posts: posts,
	                        nextPageToken: null
	                      });
	                    } catch (e) {
	                      _log2.default.error('provider `' + feedId + '`: error calling RSS: ', err);
	                      reject(e);
	                    }
	                  });
	                });
	
	              case 3:
	                return _context.abrupt('return', _context.sent);
	
	              case 4:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this);
	      }));
	
	      return function fetchPosts() {
	        return _ref.apply(this, arguments);
	      };
	    }()
	  };
	  Object.defineProperty(provider, 'feedId', {
	    get: function get() {
	      return feedId;
	    }
	  });
	  return provider;
	}
	
	function cookFeedItem(feedId, providerName, original) {
	  delete original.feed; // feed-read service stuff
	  return {
	    id: providerName + ':' + original.link,
	    title: original.title,
	    content: original.content,
	    created_time: (0, _moment2.default)(new Date(original.published).getTime()),
	    images: images(original.content),
	    link: original.link,
	    extra: { original: original },
	    source: {
	      name: providerName,
	      feed: feedId
	    }
	  };
	}
	
	function images(content) {
	  var rex = /src="([^"]*)"/i;
	  var match = rex.exec(content);
	  if (Array.isArray(match) && match[1]) {
	    return {
	      thumbnail: {
	        url: match[1]
	      }
	    };
	  }
	  return {};
	}
	module.exports = exports['default'];

/***/ },
/* 36 */
/***/ function(module, exports) {

	module.exports = require("feed-read");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createMediumProvider;
	
	var _url = __webpack_require__(29);
	
	var _url2 = _interopRequireDefault(_url);
	
	var _rss = __webpack_require__(35);
	
	var _rss2 = _interopRequireDefault(_rss);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMediumProvider(config) {
	  return (0, _rss2.default)(null, createRssConfig(config));
	}
	
	function createRssConfig(mediumConfig) {
	  if (mediumConfig.optional('user')) {
	    return {
	      feedUrl: 'https://medium.com/feed/' + mediumConfig.optional('user'),
	      feedId: feedId('user', mediumConfig.optional('user')),
	      providerName: 'medium'
	    };
	  } else if (mediumConfig.optional('publication')) {
	    return {
	      feedUrl: 'https://medium.com/feed/' + mediumConfig.optional('publication'),
	      feedId: feedId('publication', mediumConfig.optional('publication')),
	      providerName: 'medium'
	    };
	  } else if (mediumConfig.optional('publication_with_custom_domain')) {
	    var customDomainUrl = _url2.default.parse(mediumConfig.optional('publication_with_custom_domain'));
	    customDomainUrl.pathname = '/feed';
	
	    return {
	      feedUrl: customDomainUrl.format(),
	      feedId: feedId('publication_with_custom_domain', mediumConfig.optional('publication_with_custom_domain')),
	      providerName: 'medium'
	    };
	  }
	  throw new Error('medium provider: config is invalid');
	}
	
	function feedId(type, id) {
	  return 'medium:' + type + ':' + id;
	}
	module.exports = exports['default'];

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _stringify = __webpack_require__(14);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	exports.default = createInstagramProvider;
	
	var _https = __webpack_require__(32);
	
	var _https2 = _interopRequireDefault(_https);
	
	var _querystring = __webpack_require__(28);
	
	var _querystring2 = _interopRequireDefault(_querystring);
	
	var _moment = __webpack_require__(16);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_BASE_URL = 'https://api.instagram.com/v1/users/self/media/recent/';
	
	function createInstagramProvider(config) {
	  var _this = this;
	
	  var user = config.optional('user', 'own');
	  var accessToken = config.mandatory('access_token');
	  var feedId = feedIdForUser(user, accessToken);
	
	  var provider = {
	    fetchPosts: function () {
	      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
	        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
	        var pageToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	        var params, url, response;
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                params = { access_token: accessToken };
	
	                if (pageToken) {
	                  params.next_max_id = pageToken;
	                }
	
	                url = API_BASE_URL + '?' + _querystring2.default.stringify(params);
	                _context.next = 5;
	                return new _promise2.default(function (resolve, reject) {
	                  var request = _https2.default.get(url, function (message) {
	                    var body = '';
	                    message.on('data', function (responseData) {
	                      return body += responseData.toString('utf8');
	                    });
	                    message.on('end', function () {
	                      return resolve(JSON.parse(body));
	                    });
	                  });
	
	                  request.on('error', function (error) {
	                    return reject(new Error('Failed calling Instagram: ' + error.message));
	                  });
	                });
	
	              case 5:
	                response = _context.sent;
	
	                if (response.meta) {
	                  _context.next = 8;
	                  break;
	                }
	
	                throw new Error('Failed calling Instagram: invalid response: `' + (0, _stringify2.default)(response) + '`');
	
	              case 8:
	                if (!(response.meta.code !== 200)) {
	                  _context.next = 10;
	                  break;
	                }
	
	                throw new Error('Failed calling Instagram: failing response: `' + (0, _stringify2.default)(response) + '`');
	
	              case 10:
	                return _context.abrupt('return', {
	                  posts: response.data ? response.data.map(function (p) {
	                    return cookFeedItem(feedId, p);
	                  }) : [],
	                  nextPageToken: response.pagination ? response.pagination.next_max_id : null
	                });
	
	              case 11:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this);
	      }));
	
	      return function fetchPosts() {
	        return _ref.apply(this, arguments);
	      };
	    }()
	  };
	  Object.defineProperty(provider, 'feedId', {
	    get: function get() {
	      return feedId;
	    }
	  });
	  return provider;
	}
	
	function cookFeedItem(feedId, original) {
	  return {
	    id: 'inst:' + original.id,
	    title: original.caption && original.caption.text.substring(0, 20),
	    content: original.caption && original.caption.text,
	    created_time: (0, _moment2.default)(new Date(original.created_time * 1000).getTime()),
	    images: {
	      thumbnail: {
	        url: original.images.thumbnail.url
	      },
	      content: {
	        url: original.images.standard_resolution.url
	      }
	    },
	    link: original.link,
	    extra: { original: original },
	    source: {
	      name: 'instagram',
	      feed: feedId
	    }
	  };
	}
	
	function feedIdForUser(user, accessToken) {
	  if (user === 'own') {
	    return 'instagram:own:' + accessToken;
	  } else {
	    return 'instagram:user:' + user;
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 39 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getFeedId;
	function getFeedId(providers) {
	  return providers.slice().sort(function (p1, p2) {
	    var f1 = p1.feedId;
	    var f2 = p2.feedId;
	
	    if (f1 < f2) {
	      return -1;
	    } else if (f1 > f2) {
	      return 1;
	    }
	    return 0;
	  }).map(function (provider) {
	    return provider.feedId;
	  }).join('|');
	}
	module.exports = exports['default'];

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _regenerator = __webpack_require__(3);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _promise = __webpack_require__(7);
	
	var _promise2 = _interopRequireDefault(_promise);
	
	var _asyncToGenerator2 = __webpack_require__(4);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var synchronizeProvider = function () {
	  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(dataStore, provider) {
	    var _this = this;
	
	    return _regenerator2.default.wrap(function _callee3$(_context3) {
	      while (1) {
	        switch (_context3.prev = _context3.next) {
	          case 0:
	            _context3.next = 2;
	            return dataStore.synchronizeProvider(provider, function () {
	              var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(savedLastPostDate, writeStore) {
	                var newPosts;
	                return _regenerator2.default.wrap(function _callee2$(_context2) {
	                  while (1) {
	                    switch (_context2.prev = _context2.next) {
	                      case 0:
	                        _context2.next = 2;
	                        return loadNewPostsFromProvider(provider, savedLastPostDate);
	
	                      case 2:
	                        newPosts = _context2.sent;
	
	                        if (newPosts.length) {
	                          _context2.next = 5;
	                          break;
	                        }
	
	                        return _context2.abrupt('return', savedLastPostDate);
	
	                      case 5:
	                        writeStore.savePosts(newPosts);
	                        writeStore.addPostsToProvider(provider, newPosts);
	                        return _context2.abrupt('return', newPosts[0].created_time);
	
	                      case 8:
	                      case 'end':
	                        return _context2.stop();
	                    }
	                  }
	                }, _callee2, _this);
	              }));
	
	              return function (_x5, _x6) {
	                return _ref3.apply(this, arguments);
	              };
	            }());
	
	          case 2:
	            return _context3.abrupt('return', _context3.sent);
	
	          case 3:
	          case 'end':
	            return _context3.stop();
	        }
	      }
	    }, _callee3, this);
	  }));
	
	  return function synchronizeProvider(_x3, _x4) {
	    return _ref2.apply(this, arguments);
	  };
	}();
	
	var mergeProviderUpdatesToFeed = function () {
	  var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(feed, dataStore, providers, newFeedDates) {
	    var _this2 = this;
	
	    return _regenerator2.default.wrap(function _callee5$(_context5) {
	      while (1) {
	        switch (_context5.prev = _context5.next) {
	          case 0:
	            _context5.next = 2;
	            return dataStore.synchronizeFeed(feed, function () {
	              var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(savedFeedDates, writeStore) {
	                var updates, posts;
	                return _regenerator2.default.wrap(function _callee4$(_context4) {
	                  while (1) {
	                    switch (_context4.prev = _context4.next) {
	                      case 0:
	                        updates = collectUpdatesInFeed(providers, savedFeedDates, newFeedDates);
	
	                        if (updates.length) {
	                          _context4.next = 3;
	                          break;
	                        }
	
	                        return _context4.abrupt('return', savedFeedDates);
	
	                      case 3:
	                        _context4.t0 = _deduplicatePosts2.default;
	                        _context4.t1 = feed;
	                        _context4.next = 7;
	                        return getPostsFromUpdates(updates, dataStore);
	
	                      case 7:
	                        _context4.t2 = _context4.sent;
	                        _context4.t3 = _context4.t1.filterPosts.call(_context4.t1, _context4.t2);
	                        posts = (0, _context4.t0)(_context4.t3);
	
	                        writeStore.addPostsToFeed(feed, posts);
	
	                        return _context4.abrupt('return', newFeedDates);
	
	                      case 12:
	                      case 'end':
	                        return _context4.stop();
	                    }
	                  }
	                }, _callee4, _this2);
	              }));
	
	              return function (_x11, _x12) {
	                return _ref5.apply(this, arguments);
	              };
	            }());
	
	          case 2:
	            return _context5.abrupt('return', _context5.sent);
	
	          case 3:
	          case 'end':
	            return _context5.stop();
	        }
	      }
	    }, _callee5, this);
	  }));
	
	  return function mergeProviderUpdatesToFeed(_x7, _x8, _x9, _x10) {
	    return _ref4.apply(this, arguments);
	  };
	}();
	
	var getPostsFromUpdates = function () {
	  var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(updates, dataStore) {
	    var _this3 = this;
	
	    var posts;
	    return _regenerator2.default.wrap(function _callee7$(_context7) {
	      while (1) {
	        switch (_context7.prev = _context7.next) {
	          case 0:
	            _context7.next = 2;
	            return _promise2.default.all(updates.map(function () {
	              var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6(update) {
	                var posts;
	                return _regenerator2.default.wrap(function _callee6$(_context6) {
	                  while (1) {
	                    switch (_context6.prev = _context6.next) {
	                      case 0:
	                        _context6.next = 2;
	                        return dataStore.getProviderPosts(update.provider, update.endDate, update.startDate);
	
	                      case 2:
	                        posts = _context6.sent;
	
	                        if (!(update.startDate && update.startDate.isSame(posts[posts.length - 1].created_time))) {
	                          _context6.next = 7;
	                          break;
	                        }
	
	                        return _context6.abrupt('return', posts.slice(0, -1));
	
	                      case 7:
	                        return _context6.abrupt('return', posts);
	
	                      case 8:
	                      case 'end':
	                        return _context6.stop();
	                    }
	                  }
	                }, _callee6, _this3);
	              }));
	
	              return function (_x15) {
	                return _ref7.apply(this, arguments);
	              };
	            }()));
	
	          case 2:
	            posts = _context7.sent;
	            return _context7.abrupt('return', posts.reduce(function (allPosts, providerPosts) {
	              return allPosts.concat(providerPosts);
	            }, []));
	
	          case 4:
	          case 'end':
	            return _context7.stop();
	        }
	      }
	    }, _callee7, this);
	  }));
	
	  return function getPostsFromUpdates(_x13, _x14) {
	    return _ref6.apply(this, arguments);
	  };
	}();
	
	var loadNewPostsFromProvider = function () {
	  var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9(provider, savedPostDate) {
	    var loadNewPostsFromProviderRec = function () {
	      var _ref9 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8(pageToken) {
	        var newFeed, thisPagePosts, i, postDate, nextPagePosts;
	        return _regenerator2.default.wrap(function _callee8$(_context8) {
	          while (1) {
	            switch (_context8.prev = _context8.next) {
	              case 0:
	                _context8.next = 2;
	                return provider.fetchPosts(20, pageToken);
	
	              case 2:
	                newFeed = _context8.sent;
	                thisPagePosts = [];
	                i = 0;
	
	              case 5:
	                if (!(i < newFeed.posts.length)) {
	                  _context8.next = 13;
	                  break;
	                }
	
	                postDate = newFeed.posts[i].created_time;
	
	                if (!(!!savedPostDate && postDate.isSameOrBefore(savedPostDate))) {
	                  _context8.next = 9;
	                  break;
	                }
	
	                return _context8.abrupt('return', thisPagePosts);
	
	              case 9:
	
	                thisPagePosts.push(newFeed.posts[i]);
	
	              case 10:
	                i++;
	                _context8.next = 5;
	                break;
	
	              case 13:
	                if (!(!thisPagePosts.length || !newFeed.nextPageToken)) {
	                  _context8.next = 15;
	                  break;
	                }
	
	                return _context8.abrupt('return', thisPagePosts);
	
	              case 15:
	                _context8.next = 17;
	                return loadNewPostsFromProviderRec(newFeed.nextPageToken);
	
	              case 17:
	                nextPagePosts = _context8.sent;
	                return _context8.abrupt('return', thisPagePosts.concat(nextPagePosts));
	
	              case 19:
	              case 'end':
	                return _context8.stop();
	            }
	          }
	        }, _callee8, this);
	      }));
	
	      return function loadNewPostsFromProviderRec(_x18) {
	        return _ref9.apply(this, arguments);
	      };
	    }();
	
	    return _regenerator2.default.wrap(function _callee9$(_context9) {
	      while (1) {
	        switch (_context9.prev = _context9.next) {
	          case 0:
	            _context9.next = 2;
	            return loadNewPostsFromProviderRec();
	
	          case 2:
	            return _context9.abrupt('return', _context9.sent);
	
	          case 3:
	          case 'end':
	            return _context9.stop();
	        }
	      }
	    }, _callee9, this);
	  }));
	
	  return function loadNewPostsFromProvider(_x16, _x17) {
	    return _ref8.apply(this, arguments);
	  };
	}();
	
	var _log = __webpack_require__(17);
	
	var _log2 = _interopRequireDefault(_log);
	
	var _deduplicatePosts = __webpack_require__(41);
	
	var _deduplicatePosts2 = _interopRequireDefault(_deduplicatePosts);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(feed, dataStore) {
	    var feedId, providers, newFeedDates;
	    return _regenerator2.default.wrap(function _callee$(_context) {
	      while (1) {
	        switch (_context.prev = _context.next) {
	          case 0:
	            feedId = feed.getFeedId();
	
	
	            _log2.default.info('synchronizing feed ' + feedId + '...');
	
	            _context.prev = 2;
	            providers = feed.getProviders();
	            _context.next = 6;
	            return _promise2.default.all(providers.map(function (p) {
	              return synchronizeProvider(dataStore, p);
	            }));
	
	          case 6:
	            newFeedDates = _context.sent;
	            _context.next = 9;
	            return mergeProviderUpdatesToFeed(feed, dataStore, providers, newFeedDates);
	
	          case 9:
	
	            _log2.default.info('completed synchronizing feed ' + feedId);
	            _context.next = 16;
	            break;
	
	          case 12:
	            _context.prev = 12;
	            _context.t0 = _context['catch'](2);
	
	            _log2.default.error('error while synchronizing feed ' + feedId, _context.t0);
	            throw _context.t0;
	
	          case 16:
	          case 'end':
	            return _context.stop();
	        }
	      }
	    }, _callee, this, [[2, 12]]);
	  }));
	
	  function synchronize(_x, _x2) {
	    return _ref.apply(this, arguments);
	  }
	
	  return synchronize;
	}();
	
	function collectUpdatesInFeed(providers, savedFeedDates, newFeedDates) {
	  return providers.map(function (provider, index) {
	    var startDate = savedFeedDates ? savedFeedDates[index] : null;
	    var endDate = newFeedDates[index];
	
	    if (!startDate && !endDate) {
	      return null;
	    }
	
	    return {
	      provider: provider,
	      startDate: startDate,
	      endDate: endDate
	    };
	  }).filter(function (update) {
	    return !!update && (!update.startDate || update.endDate.isAfter(update.startDate));
	  });
	}
	
	module.exports = exports['default'];

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _keys = __webpack_require__(42);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _set = __webpack_require__(43);
	
	var _set2 = _interopRequireDefault(_set);
	
	exports.default = deduplicatePosts;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEDUPLICATION_TIME_WINDOW = 3000; // 3 seconds
	
	function deduplicatePosts(posts) {
	  // TODO: make me smarter
	  var duplicateIds = findDuplicates(groupPostsByTimeWindow(posts));
	  return posts.filter(function (p) {
	    return !duplicateIds.has(p.id);
	  });
	}
	
	function groupPostsByTimeWindow(posts) {
	  var postsByTimeWindow = {};
	
	  posts.forEach(function (post) {
	    var window = Math.floor(post.created_time.valueOf() / DEDUPLICATION_TIME_WINDOW);
	    postsByTimeWindow[window] = postsByTimeWindow[window] || [];
	    postsByTimeWindow[window].push(post);
	  });
	
	  return postsByTimeWindow;
	}
	
	function findDuplicates(postsByTimeWindow) {
	  var duplicateIds = new _set2.default();
	
	  (0, _keys2.default)(postsByTimeWindow).forEach(function (window) {
	    var posts = postsByTimeWindow[window];
	    if (posts.length > 0) {
	      posts.sort(function (p1, p2) {
	        return providerPriority(p1.source.name) - providerPriority(p2.source.name);
	      }).slice(1).forEach(function (p) {
	        return duplicateIds.add(p.id);
	      });
	    }
	  });
	
	  return duplicateIds;
	}
	
	function providerPriority(providerName) {
	  switch (providerName) {
	    case 'instagram':
	      return 100;
	    case 'medium':
	      return 50;
	    case 'facebook':
	      return 5;
	    case 'twitter':
	      return 1;
	    default:
	      return 0;
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 42 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/object/keys");

/***/ },
/* 43 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/set");

/***/ }
/******/ ]);
//# sourceMappingURL=rivus.bundle.js.map